
services:
  postgres:
    image: postgres:16    
    container_name: postgres                                                    # 镜像名称
    restart: always                                                           
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - ./volumes/db_storage:/var/lib/postgresql/data                        # 设置数据存储位置
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-net

  n8n:
    image: docker.n8n.io/n8nio/n8n    
    container_name: n8n                                  # 镜像名称
    restart: always
    environment:                                                        # 环境变量
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    ports:
      - 5678:5678                                                    #端口映射
    links:
      - postgres
    volumes:
      - ./volumes/n8n_storage:/home/node/.n8n                        #挂载位置
      - ./data:/data/files                                           # 本机文件映射，存储工作流下载数据。
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - n8n-net

networks:
  n8n-net:
    driver: bridge
    

